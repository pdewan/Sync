package edu.unc.sync.server;

import edu.unc.sync.*; 
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import com.sun.java.swing.*;
import com.sun.java.swing.tree.*; 

public class SyncServerInterface extends ObjectServerInterface
{
   SyncServer sync_server;
   SyncObjectServer object_server;
   Properties properties;
   DefaultTreeModel tree_model;
   JTree object_tree;
   FolderEditor dir_editor;

   public SyncServerInterface(SyncServer server, PropertiesTable properties)
   {
      super("Sync Server", server, properties);
      sync_server = server;
      setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
      // Use local system look and feel
      try {
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } catch (Exception ex) {
         System.err.println("Error loading Look&Feel: " + ex);
      }

      JMenuBar mb = getJMenuBar();
      JMenu object = (JMenu) mb.getComponentAtIndex(0);
      
      JMenuItem commit = new JMenuItem("Commit");
      commit.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
            commitAction();}});
      object.insert(commit, GCPOS);  // position of "Garbage Collect"
      object.insertSeparator(GCPOS + 1);

      setVisible(true);
   }

   TreeNode createWindowRootTreeNode(Folder root)
   {
      root.createTreeNode(Sync.getProperty("localhost")); 
      return root.getTreeNode();
   }

   void commitAction()
   {
      Object obj = getSelectedObject();
      if (obj != null && obj instanceof Replicated) try {
         sync_server.commitCurrentChanges((Replicated) obj);
      } catch (ReplicationException ex) {
         JOptionPane.showMessageDialog(this, new String[] {ex.toString()}, "Internal Sync error", JOptionPane.ERROR_MESSAGE);
      }
   }
   
   void shutdownAction()
   {
      String[] msg = new String[] {"This will shut down the Sync server.", "Are you sure you want to proceed?"};
      int resp = JOptionPane.showConfirmDialog(this, msg, "Sync Server Shutdown", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
      if (resp == JOptionPane.OK_OPTION) {
         dispose();
         sync_server.shutdown();
         System.exit(0); 
      }
   }
}